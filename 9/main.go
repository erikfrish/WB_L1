// Задача:
// Разработать конвейер чисел.
// Даны два канала: в первый пишутся числа (x) из массива, во второй — результат операции x*2,
// после чего данные из второго канала должны выводиться в stdout.

// Решение:
// Реализовал пайплайн из 3 горутин, использующих 2 небуферизованных канала
// первая записывает числа из массива в канал x, вторая читает из него числа
// и записывает в канал x2 удвоенные значения, а третья выводит результат в stdout
// канал done используется для ожидания окончания работы последней горутины
package main

import "fmt"

func main() {
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
	x := make(chan int)
	x2 := make(chan int)
	done := make(chan bool)

	go func() {
		for _, v := range arr {
			x <- v
		}
		close(x)
	}()

	go func() {
		for v := range x {
			x2 <- v * 2
		}
		close(x2)
	}()

	go func() {
		for v := range x2 {
			fmt.Println(v)
		}
		done <- true
	}()

	<-done
}
